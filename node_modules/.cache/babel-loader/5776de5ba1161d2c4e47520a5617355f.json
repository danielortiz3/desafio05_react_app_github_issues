{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/bootcamp/desafios/desafio05/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner, FaTrash } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { Form, SubmitButton, List, Message, DeleteButton } from './styles';\nimport Container from '../../components/Container';\nimport api from '../../services/api';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      error: false,\n      message: ''\n    };\n\n    this.handleDelete = () => {\n      alert('DELETE');\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            newRepo = _this$state.newRepo,\n            repositories = _this$state.repositories;\n\n      try {\n        if (newRepo === '') {\n          this.setState({\n            message: 'You must enter a valid GitHub repository.'\n          });\n          throw new Error('You must enter a valid GitHub repository.');\n        }\n\n        const repoExistis = repositories.find(r => r.name === newRepo);\n\n        if (repoExistis) {\n          this.setState({\n            message: 'This repository has been already added'\n          });\n          throw new Error('This repository has been already added');\n        }\n\n        const response = await api.get(\"repos/\".concat(newRepo)); // console.log(response.request.status);\n\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          newRepo: '',\n          repositories: [...repositories, data],\n          loading: false,\n          error: false,\n          message: ''\n        });\n      } catch (err) {\n        this.setState({\n          loading: false,\n          error: true,\n          message: err.message\n        });\n      }\n    };\n  }\n\n  // Load data from localstorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n    if (repositories) this.setState({\n      repositories: JSON.parse(repositories)\n    });\n  } // Save data to localstorage\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          repositories = _this$state2.repositories,\n          loading = _this$state2.loading,\n          error = _this$state2.error,\n          message = _this$state2.message;\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Repositories\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Repository\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading ? 1 : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, message), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, repositories.map(repo => React.createElement(\"li\", {\n      key: repo.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, repo.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/repository/\".concat(encodeURIComponent(repo.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Details\"), React.createElement(DeleteButton, {\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(FaTrash, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/Documents/bootcamp/desafios/desafio05/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","FaTrash","Link","Form","SubmitButton","List","Message","DeleteButton","Container","api","Main","state","newRepo","repositories","loading","error","message","handleDelete","alert","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","Error","repoExistis","find","r","name","response","get","data","full_name","err","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repo","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner, FaTrash } from 'react-icons/fa';\n\nimport { Link } from 'react-router-dom';\n\nimport { Form, SubmitButton, List, Message, DeleteButton } from './styles';\nimport Container from '../../components/Container';\nimport api from '../../services/api';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    error: false,\n    message: ''\n  };\n\n  // Load data from localstorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories)\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n  }\n\n  // Save data to localstorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleDelete = () => {\n    alert('DELETE');\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      newRepo: e.target.value\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    const { newRepo, repositories } = this.state;\n\n    try {\n      if (newRepo === '') {\n        this.setState({\n          message: 'You must enter a valid GitHub repository.'\n        });\n        throw new Error('You must enter a valid GitHub repository.');\n      }\n\n      const repoExistis = repositories.find(r => r.name === newRepo);\n      if (repoExistis) {\n        this.setState({\n          message: 'This repository has been already added'\n        });\n        throw new Error('This repository has been already added');\n      }\n\n      const response = await api.get(`repos/${newRepo}`);\n      // console.log(response.request.status);\n      const data = {\n        name: response.data.full_name\n      };\n\n      this.setState({\n        newRepo: '',\n        repositories: [...repositories, data],\n        loading: false,\n        error: false,\n        message: ''\n      });\n    } catch (err) {\n      this.setState({\n        loading: false,\n        error: true,\n        message: err.message\n      });\n    }\n  };\n\n  render() {\n    const { newRepo, repositories, loading, error, message } = this.state;\n    return (\n      <>\n        <Container>\n          <h1>\n            <FaGithubAlt />\n            Repositories\n          </h1>\n\n          <Form onSubmit={this.handleSubmit} error={error}>\n            <input\n              type=\"text\"\n              placeholder=\"Add Repository\"\n              value={newRepo}\n              onChange={this.handleInputChange}\n            />\n            <SubmitButton loading={loading ? 1 : 0}>\n              {loading ? (\n                <FaSpinner color=\"#FFF\" size={14} />\n              ) : (\n                <FaPlus color=\"#FFF\" size={14} />\n              )}\n            </SubmitButton>\n          </Form>\n\n          <Message>{message}</Message>\n\n          <List>\n            {repositories.map(repo => (\n              <li key={repo.name}>\n                <span>{repo.name}</span>\n                <div>\n                  <Link to={`/repository/${encodeURIComponent(repo.name)}`}>\n                    Details\n                  </Link>\n                  <DeleteButton onClick={this.handleDelete}>\n                    <FaTrash />\n                  </DeleteButton>\n                </div>\n              </li>\n            ))}\n          </List>\n        </Container>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}