{"ast":null,"code":"import _slicedToArray from \"/home/daniel/Documents/bootcamp/desafios/desafio05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/daniel/Documents/bootcamp/desafios/desafio05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList, Label, IssueFilter, PageActions } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      filters: [{\n        state: 'all',\n        label: 'All',\n        active: true\n      }, {\n        state: 'open',\n        label: 'Open',\n        active: false\n      }, {\n        state: 'closed',\n        label: 'Closed',\n        active: false\n      }],\n      filterIndex: 0,\n      page: 1\n    };\n\n    this.getIssues = async () => {\n      const match = this.props.match;\n      const _this$state = this.state,\n            filters = _this$state.filters,\n            filterIndex = _this$state.filterIndex,\n            page = _this$state.page;\n      const repoName = decodeURIComponent(match.params.repository);\n      const response = await api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n        params: {\n          state: filters[filterIndex].state,\n          per_page: 5,\n          page\n        }\n      });\n      this.setState({\n        issues: response.data\n      });\n    };\n\n    this.handleFilters = async filterIndex => {\n      await this.setState({\n        filterIndex\n      });\n      this.getIssues();\n    };\n\n    this.handlePage = async action => {\n      const page = this.state.page;\n      await this.setState({\n        page: action === 'back' ? page - 1 : page + 1\n      });\n      this.getIssues();\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const filters = this.state.filters;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(\"/repos/\".concat(repoName)), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: filters.find(f => f.active).state,\n        per_page: 5\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          repository = _this$state2.repository,\n          loading = _this$state2.loading,\n          issues = _this$state2.issues,\n          filters = _this$state2.filters,\n          filterIndex = _this$state2.filterIndex,\n          page = _this$state2.page;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Carregando ...\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(IssueFilter, {\n      active: filterIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, filters.map((filter, index) => React.createElement(\"button\", {\n      type: \"button\",\n      key: filter.label,\n      onClick: () => this.handleFilters(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, filter.label))), issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(Label, {\n      background: label.color,\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(PageActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      disabled: page < 2,\n      onClick: () => this.handlePage('back'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"P\\xE1gina \", page), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handlePage('next'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\")));\n  }\n\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["/home/daniel/Documents/bootcamp/desafios/desafio05/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","api","Container","Loading","Owner","IssueList","Label","IssueFilter","PageActions","Repository","state","repository","issues","loading","filters","label","active","filterIndex","page","getIssues","match","props","repoName","decodeURIComponent","params","response","get","per_page","setState","data","handleFilters","handlePage","action","componentDidMount","Promise","all","find","f","render","owner","avatar_url","login","name","description","map","filter","index","issue","String","id","user","html_url","title","labels","color","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport {\n  Loading,\n  Owner,\n  IssueList,\n  Label,\n  IssueFilter,\n  PageActions\n} from './styles';\n\nclass Repository extends Component {\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    filters: [\n      { state: 'all', label: 'All', active: true },\n      { state: 'open', label: 'Open', active: false },\n      { state: 'closed', label: 'Closed', active: false }\n    ],\n    filterIndex: 0,\n    page: 1\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { filters } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: filters.find(f => f.active).state,\n          per_page: 5\n        }\n      })\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  getIssues = async () => {\n    const { match } = this.props;\n    const { filters, filterIndex, page } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const response = await api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: filters[filterIndex].state,\n        per_page: 5,\n        page\n      }\n    });\n\n    this.setState({ issues: response.data });\n  };\n\n  handleFilters = async filterIndex => {\n    await this.setState({ filterIndex });\n    this.getIssues();\n  };\n\n  handlePage = async action => {\n    const { page } = this.state;\n    await this.setState({\n      page: action === 'back' ? page - 1 : page + 1\n    });\n    this.getIssues();\n  };\n\n  render() {\n    const {\n      repository,\n      loading,\n      issues,\n      filters,\n      filterIndex,\n      page\n    } = this.state;\n\n    if (loading) {\n      return <Loading>Carregando ...</Loading>;\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <IssueList>\n          <IssueFilter active={filterIndex}>\n            {filters.map((filter, index) => (\n              <button\n                type=\"button\"\n                key={filter.label}\n                onClick={() => this.handleFilters(index)}\n              >\n                {filter.label}\n              </button>\n            ))}\n          </IssueFilter>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a\n                    href={issue.html_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {issue.title}\n                  </a>\n                  {issue.labels.map(label => (\n                    <Label background={label.color} key={String(label.id)}>\n                      {label.name}\n                    </Label>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n        <PageActions>\n          <button\n            type=\"button\"\n            disabled={page < 2}\n            onClick={() => this.handlePage('back')}\n          >\n            Anterior\n          </button>\n          <span>Página {page}</span>\n          <button type=\"button\" onClick={() => this.handlePage('next')}>\n            Próximo\n          </button>\n        </PageActions>\n      </Container>\n    );\n  }\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}